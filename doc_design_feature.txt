{
    "hash_id": {
        "hash_id": "5aee9dbd2a188839105073571bee1b1f",
        "index": 1,                 //order inputted
        "hit": 1,                   //number search
        "favorite": true,           //is favourite
        "c": "2018-08-05 23:00:00", //created datetime
        "u": "2018-08-05 23:00:00", //updated datetime
        "word": "wwww",
        "example": [
            "e1",
            "e2"
        ],
    }
}
Json
    $_json_data = ''
    public function toArray() {
        //return array
    }
    public function toJson() {
        //return string json data
    }
    private function _updateJsonDataFrom(array $params = array('word', 'example', 'favourite')) {
        //return string json data
    }
    public function save() {
        //return boolean
    }
Word
    $_word_info = array()
    public function init(array $params = array('word', 'example', 'favourite')) {
        //return array
    }
    public function mergeParams(array $word_info, array $params) {
        //return array
    }
    public function generateHashId(string word) {
        //return md5 hash
    }
Dictionary
    $_word_info_list = array()

    private function _findByExactWord($word) {
        //return array
    }
    private function _sortBySortType($data, $sort_type) {
        //return array
    }
    private function _isExisted(string $word) {
        //return boolean
    }
    public function addWord(array $params = array('word', 'example', 'favourite') {
        //return array
    }
    public function add(array $params = array('word', 'example', 'favourite')) {
        //return array
    }
    public function update(array $params = array('word', 'example', 'favourite') {
        //return array
    }
    public function editWord(array $params) return word_info
        edit example
        edit only hit
        edit only favorite
    public function getList(array $params = array('sort_type')) {
        //return array
    }

    public function findByTerm(array $params = array('sort_type', 'term')) {
        //return array
    }


DictionaryCli
    check validation input
